devtools::load_all(".")
base = readRDS(file.choose())
for(i in 1:dim(base)[1]){
if(base$Committee_Abbrv[i] == "_CC2"){
base$Committee_Abbrv[i] == "CC2"
}
}
xx = unique(base[c("date", "Committee_Abbrv")])
xx
names(base)
title
base$title
xx = unique(base[c("date", "legislature", "session", "","Committee_Abbrv")])
xx = unique(base[c("date", "legislature", "session", "Committee_Abbrv")])
xx
View(base)
xx = unique(base[c("date", "legislature", "session", "organization","Committee_Abbrv")])
xx
getwd()()
getwd()
saveRDS(xx, "committees_sittings_list.rds")
committees_sittings_list = readRDS("~/Lists/committees_sittings_list.rds")
committees_sittings_list = readRDS(file.choose())
committees_sittings_list
StartDate = "2010-10-10"
EndDate "2011-11-11"
Language = "en"
CommitteeAbbrev ="INDU"
StartDate = "2010-10-10"
EndDate = "2011-11-11"
Language = "en"
CommitteeAbbrev ="INDU"
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list == CommitteeAbbrev)
committees_sittings_list
committees_sittings_list = readRDS(file.choose())
table(committees_sittings_list$Committee_Abbrv)
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list$Committee_Abbrv == CommitteeAbbrev)
committees_sittings_list
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list >= StartDate & committees_sittings_list <= EndDate)
committees_sittings_list
length(committees_sittings_list)
dim(committees_sittings_list)
url = paste0("https://www.ourcommons.ca/PublicationSearch/", tolower(Language),"/?View=L&Item=&ParlSes=from", committees_sittings_list$date[i], "to", committees_sittings_list$date[i], "&Topic=&Proc=&com=", committees_sittings_list$Committee_Abbrv[i], "&Per=&Prov=&Cauc=&PartType=&Text=&RPP=15&order=&targetLang=&SBS=0&MRR=150000&PubType=40017&xml=1")
url
get_committee = function(Working_Directory, StartDate, EndDate, Language, CommitteeAbbrev){
committees_sittings_list = readRDS("~/Lists/committees_sittings_list.rds").
get_committee = function(Working_Directory, StartDate, EndDate, Language, CommitteeAbbrev){
#committees_sittings_list = readRDS("~/Lists/committees_sittings_list.rds")
committees_sittings_list = readRDS(file.choose())
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list$Committee_Abbrv == CommitteeAbbrev)
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list >= StartDate & committees_sittings_list <= EndDate)
for(i in 1:dim(committees_sittings_list)[1]){
print(paste0("Downloading File ", i, " of ", dim(committees_sittings_list)[1], " ( ", round(i/dim(committees_sittings_list)[1]*100,2), " % )"))
url = paste0("https://www.ourcommons.ca/PublicationSearch/", tolower(Language),"/?View=L&Item=&ParlSes=from", committees_sittings_list$date[i], "to", committees_sittings_list$date[i], "&Topic=&Proc=&com=", committees_sittings_list$Committee_Abbrv[i], "&Per=&Prov=&Cauc=&PartType=&Text=&RPP=15&order=&targetLang=&SBS=0&MRR=150000&PubType=40017&xml=1")
download.file(url, paste0(Working_Directory, "can_committee_", Language, "_", committees_sittings_list$date[i], "_", committees_sittings_list$Committee_Abbrv[i]), quiet = TRUE)
}
print("Downloads Completed!")
}
get_committee = function(Working_Directory, StartDate, EndDate, Language, CommitteeAbbrev){
#committees_sittings_list = readRDS("~/Lists/committees_sittings_list.rds")
committees_sittings_list = readRDS(file.choose())
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list$Committee_Abbrv == CommitteeAbbrev)
committees_sittings_list = subset(committees_sittings_list, committees_sittings_list >= StartDate & committees_sittings_list <= EndDate)
for(i in 1:dim(committees_sittings_list)[1]){
print(paste0("Downloading File ", i, " of ", dim(committees_sittings_list)[1], " ( ", round(i/dim(committees_sittings_list)[1]*100,2), " % )"))
url = paste0("https://www.ourcommons.ca/PublicationSearch/", tolower(Language),"/?View=L&Item=&ParlSes=from", committees_sittings_list$date[i], "to", committees_sittings_list$date[i], "&Topic=&Proc=&com=", toupper(committees_sittings_list$Committee_Abbrv[i]), "&Per=&Prov=&Cauc=&PartType=&Text=&RPP=15&order=&targetLang=&SBS=0&MRR=150000&PubType=40017&xml=1")
download.file(url, paste0(Working_Directory, "can_committee_", Language, "_", committees_sittings_list$date[i], "_", committees_sittings_list$Committee_Abbrv[i]), quiet = TRUE)
}
print("Downloads Completed!")
}
get_committee(Working_Directory = "D:/GitHub/Hansard/Méthode/"
StartDate = "2010-10-10",
get_committee(Working_Directory = "D:/GitHub/Hansard/Méthode/",
StartDate = "2010-10-10",
EndDate = "2011-11-11",
Language = "en",
CommitteeAbbrev ="INDU")
getwd*()
getwd()
committees_sittings_list = readRDS("~/Lists/committees_sittings_list.rds")
getwd()
committees_sittings_list = readRDS("D:/GitHub/Hansard/Méthode/canadianHansard/Lists/committees_sittings_list.rds")
committees_sittings_list
use_date
use_data(committees_sittings_list )
library(usethis)
use_data(committees_sittings_list)
use_r("data")
use_r("data")
View(committees_sittings_list)
data("committees_sittings_list")
data
remove(committees_sittings_list)
data("committees_sittings_list")
?committees_sittings_list
?committees_sittings_list"
?committees_sittings_list
library(canadianHansard)
?committees_sittings_list
?get_committee
library(canadianHansard)
get_committee("D:/GitHub/Hansard/Méthode/",
"2010-10-10",
"2011-11-11",
"en",
"INDU")
base = readRDS(file.choose())
use_data(base)
library(usethis)
use_data(base)
use_r(data)
hansard_sittings_list = base
use_data(hansard_sittings_list)
use_r(data)
use_r(hansard_sittings_list)
use_r("hansard_sittings_list")
library(canadianHansard)
data("hansard_sittings_list")
force(hansard_sittings_list)
committees_sittings_list = data("hansard_sittings_list")
committees_sittings_list
committees_sittings_list = data(hansard_sittings_list)
committees_sittings_list
library(canadianHansard)
?hansard_sittings_list
data(hansard_sittings_list)
force(hansard_sittings_list)
data("hansard_sittings_list")
force(hansard_sittings_list)
library(canadianHansard)
?get_hansard
get_hansard(Working_Directory = "D:/GitHub/Hansard/Méthode/",
StartDate = "2023-06-01",
EndDate = "2023-06-21",
Language = "en")
library(canadianHansard)
hansard_XML2RDS_ListFiles(WD_PathXML = "D:/GitHub/Hansard/Méthode/data/test/",
WD_PathRDS = "D:/GitHub/Hansard/Méthode/data/test/")
hansard_XML2RDS_ListFiles(WD_PathXML = "D:/GitHub/Hansard/Méthode/test/",
WD_PathRDS = "D:/GitHub/Hansard/Méthode/test/")
compile_RDS_ListFiles("D:/GitHub/Hansard/Méthode/test/rds/",
"complete_test")
?canadianHansrd
?canadianHansard
get_vote_info_ListFiles = function(Working_Directory_Vote, Working_Directory_voteInfo, Language){
base_vote_list = list.files(Working_Directory_Vote)
for(k in 1:length(base_vote_list)){
setwd(Working_Directory_Vote)
base_vote = vote_cleaning(xml_database = read_xml(base_vote_list[k]))
for(i in 1:dim(base_vote)[1]){
get_vote_info(Working_Directory = Working_Directory_voteInfo,
Language = Language,
ParliamentNumber = base_vote$ParliamentNumber[i],
SessionNumber = base_vote$SessionNumber[i],
DecisionDivisionNumber = base_vote$DecisionDivisionNumber[i])
}
}
}
library(canadianHansard)
library(canadianHansard)
?get_vote
library(canadianHansard)
library(canadianHansard)
?canadianHansard
??canadianHansard
vignette("rd")
help(package = "canadianHansard"<)
help(package = "canadianHansard")
library(askpass)
?canadianHansard
??canadianHansard
vignette(canadianHansard)
view(canadianHansard)
canadianHansard()
canadianHansard(?)
canadianHansard
package_info(canadianHansard)
help(canadianHansard)
ls("canadianHansard")
ls("package:canadianHansard")
ls("package:canadianHansard")
help(package = "canadianHansard")
library(devtools)
install_github("AlexandreMillette1989/canadianHansard",
force = TRUE,
dependencies = TRUE,
upgrade = FALSE)
library(canadianHansard)
help(package = "canadianHansard")
library(canadianHansard)
remove.packages("canadianHansard")
library(devtools)
install_github("AlexandreMillette1989/canadianHansard",
force = TRUE,
dependencies = TRUE,
upgrade = FALSE)
library(canadianHansard)
library(devtools)
install_github("AlexandreMillette1989/canadianHansard",
force = TRUE,
dependencies = TRUE,
upgrade = FALSE)
library(canadianHansard)
canadianHansard::Committee_XML2RDS()
help(package = "canadianHansard")
library(devtools)
install_github("AlexandreMillette1989/canadianHansard",
force = TRUE,
dependencies = TRUE,
upgrade = FALSE)
library(canadianHansard)
help(package = "canadianHansard")
library(canadianHansard)
?get_committee
library(canadianHansard)
?get_committee
library(canadianHansard)
?get_committee
?get_committee
library(canadianHansard)
?get_committee
library(canadianHansard)
?get_committee
?get_hansard
?get_vote
library(canadianHansard)
?get_vote
library(canadianHansard)
?get_vote
library(canadianHansard)
?get_vote_info
library(canadianHansard)
?get_vote_info
library(canadianHansard)
?canadianHansard
?get_committee
?quanteda
help(quanteda)
view(help : quanteda)
library(devtools)
library(canadianHansard)
getwd()
get_hansard(Working_Directory = "~/",
StartDate = "2023-01-01",
EndDate = "2023-06-30",
Language = "en")
hansard_XML2RDS_ListFiles(WD_PathXML = "~/demo_hansard/xml/",
WD_PathRDS = "~/demo_hansard/rds/")
compile_RDS_ListFiles(WD_PathRDS = "~/demo_hansard/rds/",
filename = "compiled_data")
base = readRDS(file.choose())
head(base, 5)
View(base)
df = readRDS("~/demo_hansard/rds/compiled_data.rds")
